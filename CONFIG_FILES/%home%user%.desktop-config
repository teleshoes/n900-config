#!/usr/bin/perl

# use undef or '' to leave the image thats already present
# use a single element for a preset image set
my @desktops = ('venere.png');

#  number, desktop, x-pos, y-pos
#  e.g.: (['5551231234', 2, 656, 56])
my @contacts = (
  ['6318975047', 1, 660, 304],
);

#[desktop, rowsize, leftpos, toppos, itemWidth, itemHeight [items]]
#items are extensionless desktop filenames in /usr/share/applications/hildon
# e.g.: 'rtcom-call-ui' => /usr/share/applications/hildon/rtcom-call-ui.desktop
my @shortcutGrids = (
  [1, 1, 0, 56, 94, 94, [qw(
    rtcom-call-ui
    rtcom-messaging-ui
    browser
    xterm
  )]],
  [1, 1, 552, 384, 0, 0, [qw(klomp)]]
);


my $gcdir = '/apps/osso/hildon-desktop/applets/';
my $appdir = '/usr/share/applications/hildon-home/';

#[desktop, xpos, ypos, desktop_file, gconf_dir, desktop_dir]
# gconf_dir is the gconfkey prefix before the desktop_file
#   e.g.: /apps/osso/hildon-desktop/applets/
# desktop_dir is the filepath prefix before the desktop_file
#   e.g.: /usr/share/applications/hildon-home/
#
#the hyphen and index (e.g.: '-0') is appended to the end based
# on the order in the list
my @applets = (
  [1, 100, 368, "system_info", $gcdir, $appdir],
  [1, 0, 440, "personal-ip-address", $gcdir, $appdir],
  [1, 572, 304, "bluezwitch", $gcdir, $appdir],
);

#title, width, height, display-title =>
#update: click, desktop, boot, delay (index), network policy (index)
#desktop/view widget should be on, and (x,y) coords
#delay 0=disabled, 1=30s, 2=1min, 3=5min, 4=30min
#network 0=disabled, 1=when connected, 2=when disconnected
#       title        width  ht  disp    =>    updates     => desktop x y
#e.g.: ['rootfs',      '.10',  '1.3', 1 => 1, 1, 1, 1, 0, => 1, 0, 56],
my @dce_instances = (
  ['klomp_prev',       '.06',  '1.5', 1 => 1, 0, 0, 0, 0, => 1, 620, 56],
  ['klomp_next',       '.06',  '1.5', 1 => 1, 0, 0, 0, 0, => 1, 700, 56],
  ['klomp_bwd10',      '.06',  '1.5', 1 => 1, 0, 0, 0, 0, => 1, 620, 116],
  ['klomp_fwd10',      '.06',  '1.5', 1 => 1, 0, 0, 0, 0, => 1, 700, 116],
  ['klomp_bwd60',      '.06',  '1.5', 1 => 1, 0, 0, 0, 0, => 1, 620, 176],
  ['klomp_fwd60',      '.06',  '1.5', 1 => 1, 0, 0, 0, 0, => 1, 700, 176],
  ['klomp_pause',      '.06',  '1.5', 1 => 1, 0, 0, 0, 0, => 1, 620, 236],
  ['klomp_books',      '.06',  '1.5', 1 => 1, 0, 0, 0, 0, => 1, 700, 236],
  ['qtemail',          '.20',  '1.5', 1 => 1, 1, 1, 3, 0, => 1, 100, 300],
);

sub klompCmd($){
  return "udo klomp-cmd @_ 1>dev/null 2>/dev/null &";
}

my @dce_cmds = (
  ['qtemail'      => '@'             => 'cat /home/user/.cache/email/status-line'],

  ['klomp_pause'  => '||'            => klompCmd('pause')],
  ['klomp_next'   => '>|'            => klompCmd('next')],
  ['klomp_prev'   => '|<'            => klompCmd('prev')],
  ['klomp_fwd10'  => '>>'            => klompCmd('seek 10')],
  ['klomp_bwd10'  => '<<'            => klompCmd('seek -10')],
  ['klomp_fwd60'  => '>>>'           => klompCmd('seek 60')],
  ['klomp_bwd60'  => '<<<'           => klompCmd('seek -60')],
  ['klomp_books'  => '[=]'           => klompCmd('playlist books')],


  ['cpu_fast'     => 'CPU\\nfast'    => "udo cpu set 500 1000|echo"],
  ['cpu_slow'     => 'CPU\\nslow'    => "udo cpu set 250 600|echo"],
  ['cpu_current'  => 'CPU cur freq'  => "udo cpu get cur"],
  ['cpu_min'      => 'CPU min freq'  => "udo cpu get min"],
  ['cpu_max'      => 'CPU max freq'  => "udo cpu get max"],
  ['quick_ip'     => 'quick ip'      => "udo quick_ip"],
  ['test_sms'     => 'test sms'      => "udo send_sms 6314184821 test"],
  ['cpu_reset'    => 'reset'         => "udo cpu set|echo"],
  ['locator'      => 'Locator'       => "udo desktop_cmd_exec_locator"],

  ['uptime'       => 'Uptime:'       => 'uptime|cut -d" " -f4-|sed \'s/\\\\, *load.*//\''],
  ['battery'      => 'Battery(%):'   => 'hal-device bme | awk -F"[. ]" \'$5 == "is_charging" {chrg = $7}\\;\\s$5 == "percentage" {perc = $7} END if (chrg == "false") {print perc "%"} else {print "Chrg"}\''],
  ['battery_mah'  => 'Battery(mAh):' => 'hal-device bme | grep battery.reporting | awk -F. \'{print $3}\' | sort | awk \'$1 == "current" { current = $3}\\;\\s$1== "design" {print current "/" $3}\''],
  ['boot_reason'  => 'Boot Reason:'  => 'cat /proc/bootreason'],
  ['boot_count'   => 'Boot Count:'   => 'cat /var/lib/dsme/boot_count'],
  ['external_ip'  => 'External IP:'  => 'wget --timeout=10 -q -O - api.myiptest.com | awk -F "\\\\"" \'{print $4}\''],
  ['internal_ip'  => 'Internal IP:'  => '/sbin/ifconfig | grep "inet addr" | awk -F: \'{print $2}\' | awk \'{print $1}\''],
  ['rootfs'       => 'rootfs:'       => 'df | awk \'$1 == "rootfs" {print $5}\''],
  ['free_rootfs'  => 'Free Rootfs:'  => 'df -h | awk \' $1 == "rootfs" {print $4"B"}\''],
);

my @config = (
  [@desktops], [@contacts], [@shortcutGrids], [@applets],
  [@dce_instances], [@dce_cmds],
);
@config;
