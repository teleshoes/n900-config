#!/usr/bin/perl
use strict;
use warnings;

my $inc = 6;

sub get(){
  my $cmd = ''
    . "dbus-send "
    . "--print-reply "
    . "--type=method_call "
    . "--dest=com.nokia.mafw.renderer.Mafw-Gst-Renderer-Plugin.gstrenderer "
    . "/com/nokia/mafw/renderer/gstrenderer "
    . "com.nokia.mafw.extension.get_extension_property "
    . "string:volume"
    ;
  my $vol = `$cmd`;
  $vol =~ /uint32 (\d+)/;
  return $1;
}

sub set($){
  my $vol = shift;
  $vol = 0 if $vol < 0;
  $vol = 100 if $vol > 100;
  my $cmd = ''
    . "dbus-send "
    . "--type=method_call "
    . "--dest=com.nokia.mafw.renderer.Mafw-Gst-Renderer-Plugin.gstrenderer "
    . "/com/nokia/mafw/renderer/gstrenderer "
    . "com.nokia.mafw.extension.set_extension_property "
    . "string:volume "
    . "variant:uint32:$vol"
    ;
  system "$cmd";
}

sub setAndPrint($){
  print get;
  set $_[0];
  print " => " . get . "\n";
}

my $arg = shift;
$arg = '' if not defined $arg;

if($arg eq 'get'){
  print get . "\n";
}elsif($arg eq 'up' or $arg eq '+'){
  setAndPrint get + $inc;
}elsif($arg eq 'down' or $arg eq '-'){
  setAndPrint get - $inc;
}elsif($arg =~ /^(\d+)$/ and $arg < 100){
  setAndPrint $1;
}elsif($arg =~ /^\+(\d+)$/){
  setAndPrint get + $1;
}elsif($arg =~ /^-(\d+)$/){
  setAndPrint get - $1;
}else{
  die "Usage:
    $0 get
    $0 up    {+$inc}
    $0 +     {+$inc}
    $0 down  {-$inc}
    $0 -     {-$inc}
    $0 INT   {set exactly 0-100}
    $0 +INT  {increment by INT}
    $0 -INT  {decrement by INT}\n";
}
